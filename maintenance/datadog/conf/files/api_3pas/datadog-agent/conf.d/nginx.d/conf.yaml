init_config:

instances:
  # For every instance, you need an `nginx_status_url` and can optionally
  # supply a list of tags.  This plugin requires nginx to be compiled with
  # the nginx stub status module option, and activated with the correct
  # configuration stanza.  On debian/ubuntu, this is included in the
  # `nginx-extras` package.  For more details, see:
  #
  #   http://docs.datadoghq.com/integrations/nginx/
  #

  - nginx_status_url: http://localhost/server-status
  #   tags:
  #     - instance:foo
  #
  # - nginx_status_url: http://example2.com:1234/nginx_status/
  #   ssl_validation: False
  
  #   If the status page is behind basic auth. 
  #   user: USER
  #   password: PASSWORD
  
  #   tags:
  #     - instance:bar
#Log section
# logs:
    # - type : (mandatory) type of log input source (tcp / udp / file)
    #   port / path : (mandatory) Set port if type is tcp or udp. Set path if type is file
    #   service : (mandatory) name of the service owning the log
    #   source : (mandatory) attribute that defines which integration is sending the logs
    #   sourcecategory : (optional) Multiple value attribute. Can be used to refine the source attribtue
    #   tags: (optional) add tags to each logs collected

#  - type: file
#    path: /var/log/nginx/acq_https_view.log
#    service: nginx
#    source: nginx
#    sourcecategory: https_view_access

#  - type: file
#    path: /var/log/nginx/acq_https_view.errorlog
#    service: nginx
#    source: nginx
#    sourcecategory: https_view_access
logs:
  - type: file
    path: /var/log/nginx/*.errorlog
    service: nginx
    source: nginx.error
    sourcecategory: http_web_access
    log_processing_rules:
      - type: multi_line
        name: new_log_start_with_date
        pattern: \d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])