---
##
- name: ansibleでSELinuxを操作するために必要なので入れる
  yum: name=libselinux-python state=present

##
- name: iptablesの初期化
  shell: >
    iptables-save > /etc/sysconfig/iptables.`date +%Y%m%d`;
    iptables -F;
    iptables -F -t nat;
    iptables-save > /etc/sysconfig/iptables;
    /etc/init.d/iptables restart;
    /etc/init.d/iptables stop;
    /etc/init.d/ip6tables stop;
    chkconfig iptables on;
    chkconfig ip6tables off;
    /etc/init.d/iptables start;
##
- name: gateway/DNSサーバの設定
  lineinfile:
    dest=/etc/resolv.conf
    line={{ item }}
  with_items: # ネームサーバ天王洲
    - 'options timeout:3 attempts:2'
    - 'nameserver 118.67.70.18'
    - 'nameserver 202.131.202.5'
    - 'nameserver 8.8.8.8'
##
- name: SSHの設定
  replace: dest=/etc/ssh/sshd_config regexp='#PermitRootLogin yes' replace='PermitRootLogin yes' backup=yes
  #todo: PermitRootLogin no
##
- name: yumリポジトリの設定
  yum:
    name: '{{ item }}'
    state: present
  with_items:
  - yum-plugin-priorities

- name: download epel repository
  yum: name={{ item }} state=present
  with_items:
  - http://ftp.iij.ad.jp/pub/linux/fedora/epel/6/x86_64/Packages/e/epel-release-6-8.noarch.rpm

- name: registor epel repository
  replace:
    path: /etc/yum.repos.d/epel.repo
    regexp: '^enabled=.*'
    replace: 'enabled=0'

- name: download remi repository
  yum:
   name: '{{ item }}'
   state: present
  with_items:
  - http://rpms.famillecollet.com/enterprise/remi-release-6.rpm

- name: registor remi.repo
  replace:
    path: /etc/yum.repos.d/remi.repo
    regexp: '^enabled=.*'
    replace: 'enabled=0'

- name: registor remi.repo
  replace:
    path: /etc/yum.repos.d/remi.repo
    regexp: 'Linux 6 -'
    replace: "Linux {{ansible_distribution_version}} -"

- name: registor remi.repo
  replace:
    path: /etc/yum.repos.d/remi.repo
    regexp: '/enterprise/6/'
    replace: '/enterprise/{{ansible_distribution_version}}/'
  when: ansible_distribution_version == '6.8'
# 6.8と9しかurlが存在しないため、6.7以下は全て6のままで

- name: registor remi-safe.repo
  replace:
    path: /etc/yum.repos.d/remi-safe.repo
    regexp: '^enabled=.*'
    replace: 'enabled=0'

- name: install libssh2 openssl glibc
  yum:
    name: '{{ item }}'
    state: latest
  with_items:
    - libssh2
    - openssl
    - glibc

##
- name: update systemcommands
  yum:
    name: '{{ item }}'
    state: latest
    enablerepo: epel,remi
  with_items:
    - wget
    - telnet
    - ntp
    - rsync
    - openssh-clients
    - tree
    - sysstat
    - bind-utils
    - dmidecode
    - hdparm
    - nmap
    - lsof
#    - mpt-status
    - jwhois
    - man
    - pciutils
#    - megactl
    - nfs-utils
    - nfs-utils-lib
    - lm_sensors
    - openssl
    - tcpdump
    - wireshark

# - name: update mpt-status
#   yum:
#     name: '{{ item }}'
#     state: present
#   with_items:
#     - mpt-status

- name: install megacli
  yum:
    name: http://ginernet.com/downloads/MegaCli-8.07.14-1.noarch.rpm
    state: present

##
- name: im_sensorsの初期化と動作確認
  shell: >
    yes | sensors-detect

##
- name: disable selinux
  selinux: state=disabled

##
- name: reboot
  shell: "sleep 2 && reboot"
  async: 1
  poll: 0

- name: waiting for reboot
  local_action: wait_for host={{ inventory_hostname }} port=22 delay=30

##
- name: edit sysctl.conf
  lineinfile:
    dest=/etc/sysctl.conf
    line={{ item }}
  with_items:
    - '#add FullSpeed'
    - 'net.ipv6.conf.all.disable_ipv6 = 1'
    - 'net.ipv6.conf.default.disable_ipv6 = 1'
    - 'net.ipv6.conf.lo.disable_ipv6 = 1'
    - 'vm.swappiness = 0'
    - 'net.ipv4.tcp_fin_timeout=5'
    - 'net.ipv4.tcp_max_tw_buckets=900000'
    - 'net.ipv4.tcp_max_syn_backlog = 60000'
    - '#for iptables against Lost packet'
    - 'net.netfilter.nf_conntrack_max  = 300000'
    - 'net.nf_conntrack_max = 300000'
    - 'net.core.somaxconn = 1024'
    - 'net.core.netdev_max_backlog = 30720'
    - 'net.ipv4.ip_local_port_range = 32768 65535'
    - 'net.ipv4.tcp_tw_reuse = 1'
    - 'net.core.rmem_max = 16777216'
    - 'net.core.wmem_max = 16777216'
    - 'net.ipv4.tcp_rmem = 4096 87380 16777216'
    - 'net.ipv4.tcp_wmem = 4096 87380 16777216'

##
- name: ntpの定時実行cronの設定
  stat: path=/etc/cron.hourly/ntpdcron
  register: ntp
- name: touch file
  file:
    path: /etc/cron.hourly/ntpdcron
    state: touch
  when: not ntp.stat.exists
- name: insert text (touch)
  lineinfile:
    dest=/etc/cron.hourly/ntpdcron
    line={{ item }}
  with_items:
    - '#!/bin/bash'
    - '/usr/sbin/ntpdate ns1.freebit.net > /dev/null 2>&1'

- name: change permission
  file:
    path: '{{ item }}'
    mode: 0755
  with_items:
    - '/etc/cron.hourly/ntpdcron'

- name: give hosts file
  copy:
    src: '{{ host_files }}'
    dest: /etc/hosts
    backup: yes
    mode: '0644'

- name: set sudoers for datadog
  copy:
    src: common_sudoers
    dest: /etc/sudoers.d/common
